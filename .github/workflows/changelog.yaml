name: Changelog

on:
  pull_request:
  push:
    branches:
      - master
      - terraform-0.11.x/master
    paths-ignore: ["CHANGELOG.md"]

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
    - id: debugging
      run: |
        : Debugging Data
        printf '##\n# Environ\n%s\n' "$(env | grep '^GITHUB_' | sort)"
        printf '##\n# Event\n%s\n' "$(cat "${GITHUB_EVENT_PATH}")"

  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: "üì• Check-out"
        uses: actions/checkout@v2

      - name: "‚úèÔ∏è Generate release changelog"
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          excludeTagsRegex: '^v\d+(\.\d+)?$'
          token: ${{ github.token }}
          onlyLastTag: false
          stripHeaders: false
          stripGeneratorNotice: true
          pullRequests: false
          unreleased: true
          issues: true
          prWoLabels: false
          issuesWoLabels: true
          addSections: '{"documentation":{"prefix":"**Documentation:**","labels":["documentation"]}}'

      - id: comment
        if: ${{ github.event.pull_request }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          : Post Changelog to Pull-Request
          sh gh-issue-comment.sh --comment-id 'changelog' 'CHANGELOG.md' "${{ github.event.pull_request.number }}"

      - id: settings
        name: Temporarily disable branch protection
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOMATION_REPO_TOKEN }}
        run: |
          if test "${{ github.ref_protected }}" = 'true'; then
            echo '::set-output name=protected::true'
            printf '::set-output name=status_checks::%s' "$(gh api 'repos/{owner}/{repo}/branches/${github.ref_name}/protection/required_status_checks')"
            #gh api -XDELETE 'repos/{owner}/{repo}/branches/${{ github.ref_name }}/protection/enforce_admins'
            gh api -XPATCH 'repos/{owner}/{repo}/branches/${{ github.ref_name }}/protection' --field 'enabled=false'
          else
            echo '::set-output name=protected::false'
          fi

      - id: push-changelog
        if: ${{ steps.settings.outputs.protected == 'true' }}
        run: |
          : Push Changelog
          set -e
          git config user.name 'Automatic Changelog'
          git config user.email '<github-actions@users.noreply.github.com>'
          tac CHANGELOG.md | awk 'NF {p=1} p' | tac > CHANGELOG.new
          mv CHANGELOG.new CHANGELOG.md
          git add CHANGELOG.md
          git commit -m 'Update Changelog' || :
          git push

      - name: Enable branch protection
        if: ${{ always() && steps.settings.outputs.protected == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.AUTOMATION_REPO_TOKEN }}
        run: |
          #gh api -XPOST 'repos/{owner}/{repo}/branches/${{ github.ref_name }}/protection/enforce_admins'
          gh api -XPATCH 'repos/{owner}/{repo}/branches/${{ github.ref_name }}/protection' --field 'enabled=true'
          gh api -XPATCH 'repos/{owner}/{repo}/branches/${{ github.ref_name }}/protection' --field "required_status_checks=${{ steps.settings.outputs.required_status_checks }}"
